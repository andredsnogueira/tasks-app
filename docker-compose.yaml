version: '3'

services:
  app:
    image: node:16.1.0-alpine3.13
    container_name: tasks-app
    restart: unless-stopped
    working_dir: /home/node/tasks-app
    ports:
      - '3000:3000'
    volumes:
      - ./app/src:/home/node/tasks-app
    networks:
      - tasks-network
    command: sh -c "npm install && npm install -g knex && npm install -g nodemon && npm run dev && npm run migrate"
    env_file:
      - ./app/src/.env
    depends_on:
      rabbitmq:
        condition: service_healthy

  consumer:
    image: node:16.1.0-alpine3.13
    container_name: tasks-consumer
    restart: unless-stopped
    working_dir: /home/node/tasks-consumer
    volumes:
      - ./consumer/src:/home/node/tasks-consumer
    networks:
      - tasks-network
    command: sh -c "npm install && npm install -g nodemon && nodemon app.js"
    env_file:
      - ./consumer/src/.env
    depends_on:
      rabbitmq:
        condition: service_healthy

  db:
    image: mysql:8.0.25
    container_name: tasks-mysql
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: tasks
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: tasks
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - tasks-network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'db']
      interval: 10s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.8.16-alpine
    container_name: tasks-rabbitmq
    hostname: tasks-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: tasks
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - tasks-network
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', '-q', 'ping']
      interval: 10s
      timeout: 10s
      retries: 3

networks:
  tasks-network:
    driver: bridge

volumes:
  db_data:
  rabbitmq_data:
